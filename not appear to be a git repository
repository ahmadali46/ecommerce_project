[33mcommit a5c105c16c930bb65aa5927602ddb015cc49968a[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: ahmadali46 <ahmadali46454443@gmail.com>
Date:   Mon May 9 14:30:57 2022 +0500

    cart

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..eba74f4[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mvenv/[m
\ No newline at end of file[m
[1mdiff --git a/crud/__init__.py b/crud/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/crud/__pycache__/__init__.cpython-310.pyc b/crud/__pycache__/__init__.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..18b0f09[m
Binary files /dev/null and b/crud/__pycache__/__init__.cpython-310.pyc differ
[1mdiff --git a/crud/__pycache__/settings.cpython-310.pyc b/crud/__pycache__/settings.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0b390bd[m
Binary files /dev/null and b/crud/__pycache__/settings.cpython-310.pyc differ
[1mdiff --git a/crud/__pycache__/urls.cpython-310.pyc b/crud/__pycache__/urls.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8c8699c[m
Binary files /dev/null and b/crud/__pycache__/urls.cpython-310.pyc differ
[1mdiff --git a/crud/__pycache__/wsgi.cpython-310.pyc b/crud/__pycache__/wsgi.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..3f050d9[m
Binary files /dev/null and b/crud/__pycache__/wsgi.cpython-310.pyc differ
[1mdiff --git a/crud/asgi.py b/crud/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..77e38a8[m
[1m--- /dev/null[m
[1m+++ b/crud/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for crud project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crud.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/crud/settings.py b/crud/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..20fa2b8[m
[1m--- /dev/null[m
[1m+++ b/crud/settings.py[m
[36m@@ -0,0 +1,173 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for crud project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 3.2.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom msilib.schema import Media[m
[32m+[m[32mfrom pathlib import Path,os[m
[32m+[m[32mfrom django.core.mail import send_mail[m
[32m+[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[32m+[m[32mBASE_DIR = Path(__file__).resolve().parent.parent[m
[32m+[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'django-insecure-xqm%@9a57uz0yn-3&lm(39u^0pqa^@+%cri8b)d5=%d-5#*7=='[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: don't run with debug turned on in production![m
[32m+[m[32mDEBUG = True[m
[32m+[m
[32m+[m[32mALLOWED_HOSTS = [][m
[32m+[m
[32m+[m
[32m+[m[32m# Application definition[m
[32m+[m
[32m+[m[32mINSTALLED_APPS = [[m
[32m+[m[32m    'django.contrib.admin',[m
[32m+[m[32m    # 'django.contrib.gis',[m
[32m+[m[32m    'django.contrib.auth',[m
[32m+[m[32m    'django.contrib.contenttypes',[m
[32m+[m[32m    'django.contrib.sessions',[m
[32m+[m[32m    'django.contrib.messages',[m
[32m+[m[32m    'django.contrib.staticfiles',[m
[32m+[m[32m    'seller',[m
[32m+[m[32m    'emp',[m
[32m+[m[32m    'crispy_forms',[m
[32m+[m[32m    'django_cleanup.apps.CleanupConfig',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mMIDDLEWARE = [[m
[32m+[m[32m    'django.middleware.security.SecurityMiddleware',[m
[32m+[m[32m    'django.contrib.sessions.middleware.SessionMiddleware',[m
[32m+[m[32m    'django.middleware.common.CommonMiddleware',[m
[32m+[m[32m    'django.middleware.csrf.CsrfViewMiddleware',[m
[32m+[m[32m    'django.contrib.auth.middleware.AuthenticationMiddleware',[m
[32m+[m[32m    'django.contrib.messages.middleware.MessageMiddleware',[m
[32m+[m[32m    'django.middleware.clickjacking.XFrameOptionsMiddleware',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mROOT_URLCONF = 'crud.urls'[m
[32m+[m
[32m+[m[32mTEMPLATES = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'BACKEND': 'django.template.backends.django.DjangoTemplates',[m
[32m+[m[32m        'DIRS': [],[m
[32m+[m[32m        'APP_DIRS': True,[m
[32m+[m[32m        'OPTIONS': {[m
[32m+[m[32m            'context_processors': [[m
[32m+[m[32m                'django.template.context_processors.debug',[m
[32m+[m[32m                'django.template.context_processors.request',[m
[32m+[m[32m                'django.contrib.auth.context_processors.auth',[m
[32m+[m[32m                'django.contrib.messages.context_processors.messages',[m
[32m+[m[32m            ],[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mWSGI_APPLICATION = 'crud.wsgi.application'[m
[32m+[m
[32m+[m
[32m+[m[32m# Database[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.2/ref/settings/#databases[m
[32m+[m
[32m+[m[32mDATABASES = {[m
[32m+[m[32m    'default': {[m
[32m+[m[32m        'ENGINE': 'django.db.backends.sqlite3',[m
[32m+[m[32m        'NAME': BASE_DIR / 'db.sqlite3',[m
[32m+[m[32m        # 'USER' :'user001',[m
[32m+[m[32m        # 'PASSWORD':'123456789',[m
[32m+[m[32m        # 'HOST':'localhost',[m
[32m+[m[32m        # 'PORT':'5432'[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m# Password validation[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators[m
[32m+[m
[32m+[m[32mAUTH_PASSWORD_VALIDATORS = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m
[32m+[m[32m# Internationalization[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.2/topics/i18n/[m
[32m+[m
[32m+[m[32mLANGUAGE_CODE = 'en-us'[m
[32m+[m
[32m+[m[32mTIME_ZONE = 'UTC'[m
[32m+[m
[32m+[m[32mUSE_I18N = True[m
[32m+[m
[32m+[m[32mUSE_L10N = True[m
[32m+[m
[32m+[m[32mUSE_TZ = True[m
[32m+[m
[32m+[m
[32m+[m[32m# Static files (CSS, JavaScript, Images)[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.2/howto/static-files/[m
[32m+[m[32mSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), )[m[41m [m
[32m+[m[32mSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')[m
[32m+[m[32mSTATIC_URL = '/static/'[m
[32m+[m[32mMEDIA_URL = '/media/'[m
[32m+[m[32mMEDIA_ROOT = os.path.join(BASE_DIR, 'media')[m
[32m+[m
[32m+[m[32mAUTH_USER_MODEL = 'emp.MyUser'[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# send_mail([m
[32m+[m[32m#     'Subject here',[m
[32m+[m[32m#     'Here is the message.',[m
[32m+[m[32m#     'ahmadali46454443@gmail.com',[m
[32m+[m[32m#     [os.environ.get('User_Email')],[m
[32m+[m[32m#     fail_silently=False,[m
[32m+[m[32m# )[m
[32m+[m
[32m+[m[32mEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'[m
[32m+[m[32mEMAIL_HOST = 'smtp.gmail.com'[m
[32m+[m[32mEMAIL_PORT = 587[m
[32m+[m[32m# EMAIL_USE_TLS = True[m
[32m+[m
[32m+[m[32mEMAIL_HOST_USER = os.environ.get('User_Email')[m
[32m+[m[32mEMAIL_HOST_PASSWORD = os.environ.get('User_Password')[m
[32m+[m[32mEMAIL_HOST_USER = 'ahmadali46454443@gmail.com'[m
[32m+[m[32mEMAIL_HOST_PASSWORD = 'ahmadali1591'[m
[32m+[m[32mEMAIL_USE_TLS = True[m
[32m+[m[32mEMAIL_USE_SSL = False[m
[32m+[m[32m# Default primary key field type[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field[m
[32m+[m
[32m+[m[32mDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'[m
[32m+[m
[32m+[m[32mCSRF_COOKIE_SECURE=True[m
[32m+[m
[32m+[m[32mLOGIN_URL = '/'[m
[32m+[m[32mLOGIN_REDIRECT_URL='/add/'[m
[32m+[m[32mLOGOUT_URL = '/login/'[m
[32m+[m[32mDEFAULT_AUTO_FIELD = 'django.db.models.AutoField'[m
[32m+[m[32m# DEFAULT_AUTO_FIELD = 'project.common.models.CustomUUIDField'[m
[32m+[m
[32m+[m[32m# DEFAULT_AUTO_FIELD = 'django.db.models.UUIDField'[m
\ No newline at end of file[m
[1mdiff --git a/crud/urls.py b/crud/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..ac24607[m
[1m--- /dev/null[m
[1m+++ b/crud/urls.py[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m"""crud URL Configuration[m
[32m+[m
[32m+[m[32mThe `urlpatterns` list routes URLs to views. For more information please see:[m
[32m+[m[32m    https://docs.djangoproject.com/en/3.2/topics/http/urls/[m
[32m+[m[32mExamples:[m
[32m+[m[32mFunction views[m
[32m+[m[32m    1. Add an import:  from my_app import views[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[32m+[m[32mClass-based views[m
[32m+[m[32m    1. Add an import:  from other_app.views import Home[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[32m+[m[32mIncluding another URLconf[m
[32m+[m[32m    1. Import the include() function: from django.urls import include, path[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[32m+[m[32m"""[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.urls import path,include[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.conf.urls.static import static[m
[32m+[m[32mfrom django.contrib.staticfiles.urls import staticfiles_urlpatterns[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path('admin/', admin.site.urls),[m
[32m+[m[32m    path('',include('emp.urls')),[m
[32m+[m[32m    path('seller/',include('seller.urls')),[m
[32m+[m[32m]+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)[m
[32m+[m
[32m+[m
[32m+[m[32murlpatterns += staticfiles_urlpatterns()[m
[1mdiff --git a/crud/wsgi.py b/crud/wsgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..5bfcccf[m
[1m--- /dev/null[m
[1m+++ b/crud/wsgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mWSGI config for crud project.[m
[32m+[m
[32m+[m[32mIt exposes the WSGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/howto/deployment/wsgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.wsgi import get_wsgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crud.settings')[m
[32m+[m
[32m+[m[32mapplication = get_wsgi_application()[m
[1mdiff --git a/db.sqlite3 b/db.sqlite3[m
[1mnew file mode 100644[m
[1mindex 0000000..f5a5a8d[m
Binary files /dev/null and b/db.sqlite3 differ
[1mdiff --git a/emp/__init__.py b/emp/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/emp/__pycache__/__init__.cpython-310.pyc b/emp/__pycache__/__init__.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..cd40074[m
Binary files /dev/null and b/emp/__pycache__/__init__.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/admin.cpython-310.pyc b/emp/__pycache__/admin.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..4debdb8[m
Binary files /dev/null and b/emp/__pycache__/admin.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/apps.cpython-310.pyc b/emp/__pycache__/apps.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..066113b[m
Binary files /dev/null and b/emp/__pycache__/apps.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/forms.cpython-310.pyc b/emp/__pycache__/forms.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7c12608[m
Binary files /dev/null and b/emp/__pycache__/forms.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/models.cpython-310.pyc b/emp/__pycache__/models.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..dc587d3[m
Binary files /dev/null and b/emp/__pycache__/models.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/urls.cpython-310.pyc b/emp/__pycache__/urls.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d287071[m
Binary files /dev/null and b/emp/__pycache__/urls.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/views.cpython-310.pyc b/emp/__pycache__/views.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..facb08c[m
Binary files /dev/null and b/emp/__pycache__/views.cpython-310.pyc differ
[1mdiff --git a/emp/__pycache__/views.cpython-310.pyc.3041180245296 b/emp/__pycache__/views.cpython-310.pyc.3041180245296[m
[1mnew file mode 100644[m
[1mindex 0000000..f56c951[m
Binary files /dev/null and b/emp/__pycache__/views.cpython-310.pyc.3041180245296 differ
[1mdiff --git a/emp/admin.py b/emp/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c57a1e7[m
[1m--- /dev/null[m
[1m+++ b/emp/admin.py[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32mfrom itertools import product[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m
[32m+[m[32mfrom .models import employee,get_user,Product,Cart,CartItem,Wishlist[m
[32m+[m[32mfrom django import forms[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.contrib.auth.models import Group[m
[32m+[m[32mfrom django.contrib.auth.admin import UserAdmin as BaseUserAdmin[m
[32m+[m
[32m+[m
[32m+[m[32mfrom emp.models import MyUser[m
[32m+[m
[32m+[m[32madmin.site.register(MyUser)[m
[32m+[m
[32m+[m[32m@admin.register(get_user)[m
[32m+[m[32mclass PersonAdmin(admin.ModelAdmin):[m
[32m+[m[32m    list_display = ('email','contact','password1')[m
[32m+[m
[32m+[m[32m@admin.register(Product)[m
[32m+[m[32mclass Productdetail(admin.ModelAdmin):[m
[32m+[m[32m    list_display = ['title','description','price','discounted_price'][m
[32m+[m[41m    [m
[32m+[m[32madmin.site.register(Cart)[m
[32m+[m
[32m+[m[32madmin.site.register(CartItem)[m
[32m+[m
[32m+[m[32madmin.site.register(Wishlist)[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m#[m[41m [m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m@admin.register(employee)[m
[32m+[m[32mclass Admin(admin.ModelAdmin):[m
[32m+[m[32m     list_display = ['id','Firstname','Lastname','Email','City','Salary'][m
[32m+[m
[32m+[m
[32m+[m[32m# Register your models here.[m
[1mdiff --git a/emp/apps.py b/emp/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..695f341[m
[1m--- /dev/null[m
[1m+++ b/emp/apps.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass EmpConfig(AppConfig):[m
[32m+[m[32m    default_auto_field = 'django.db.models.BigAutoField'[m
[32m+[m[32m    name = 'emp'[m
[1mdiff --git a/emp/backends.py b/emp/backends.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/emp/forms.py b/emp/forms.py[m
[1mnew file mode 100644[m
[1mindex 0000000..29ade73[m
[1m--- /dev/null[m
[1m+++ b/emp/forms.py[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32mfrom xml.dom.minidom import Attr[m
[32m+[m[32mfrom django import forms[m
[32m+[m[32mfrom . models import *[m
[32m+[m[32mfrom . models import employee[m
[32m+[m[32mfrom django.contrib.auth.forms import UserCreationForm,AuthenticationForm[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m[32m# from django.contrib.gis.db import models[m
[32m+[m[32mfrom django.contrib.auth.forms import ReadOnlyPasswordHashField[m
[32m+[m[32mfrom django.core.exceptions import ValidationError[m
[32m+[m[32mfrom emp.models import MyUser[m
[32m+[m[32mfrom django.contrib.auth import get_user_model[m
[32m+[m
[32m+[m
[32m+[m[32mclass UserCreationForm(forms.ModelForm):[m
[32m+[m[32m    password1 = forms.CharField(max_length=50,label='password',widget=forms.PasswordInput)[m
[32m+[m[32m    password2 = forms.CharField(max_length=50,label='confirm password',widget=forms.PasswordInput)[m
[32m+[m[41m    [m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = MyUser[m
[32m+[m[32m        fields = ('email','user_type','contact')[m
[32m+[m
[32m+[m
[32m+[m[32m    def clean_password2(self):[m
[32m+[m[32m        password1 = self.cleaned_data.get('password1')[m
[32m+[m[32m        password2 = self.cleaned_data.get('password2')[m
[32m+[m[32m        if password1 and password2 and password1 != password2:[m
[32m+[m[32m            raise ValidationError('password does not match')[m
[32m+[m[32m        return password2[m
[32m+[m[41m    [m
[32m+[m[32m    def save(self,commit =True):[m
[32m+[m[32m        user = super().save(commit=False)[m
[32m+[m[32m        user.set_password(self.cleaned_data['password1'])[m
[32m+[m[32m        if commit:[m
[32m+[m[32m            user.save()[m
[32m+[m[32m        return user[m
[32m+[m[41m    [m
[32m+[m[32mclass UserChangeForm(forms.ModelForm):[m
[32m+[m[32m    password = ReadOnlyPasswordHashField()[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = MyUser[m
[32m+[m[32m        fields = ('email','password','contact','is_active','is_admin')[m
[32m+[m
[32m+[m
[32m+[m[32mclass EmployeeForm(forms.ModelForm):[m
[32m+[m[32m    #  location = .PointField[m
[32m+[m[32m     class Meta:[m
[32m+[m[32m      model =  employee[m
[32m+[m[32m      fields = ['Firstname','Lastname','Email','City','Salary'][m
[32m+[m[41m      [m
[32m+[m[32mclass ProductForm(forms.ModelForm):[m
[32m+[m[32m    # email = forms.CharField(max_length=50,label='email',widget=forms.EmailInput(attrs={'class':'form-control'}))[m
[32m+[m[32m    title = forms.CharField(max_length=50,label='title',widget=forms.TextInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    description = forms.CharField(max_length=50,label='description',widget=forms.TextInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    price = forms.IntegerField(max_value=399999,label='price',widget=forms.NumberInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    discounted_price = forms.IntegerField(max_value=399999,label='discounted_price',widget=forms.NumberInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    image_upload = forms.ImageField(label='image_upload',widget=forms.ClearableFileInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    file = forms.FileField(label='file',widget=forms.ClearableFileInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Product[m
[32m+[m[32m        fields = ['user','title','description','price','discounted_price','image_upload','file','category'][m
[32m+[m[32m        # exclude = ('user',)[m
[32m+[m[41m     [m
[32m+[m[32mclass UpdateForm(forms.ModelForm):[m
[32m+[m[32m     class Meta:[m
[32m+[m[32m      model =  employee[m
[32m+[m[32m      fields = ['Firstname','Lastname','Email','City','Salary'][m
[32m+[m[41m     [m
[32m+[m[32mclass RegistrationForm(UserCreationForm):[m
[32m+[m[32m    # username = forms.CharField(max_length=50)[m
[32m+[m[32m    email = forms.CharField(max_length=50,label='email',widget=forms.EmailInput(attrs={'class':'form-control'}))[m
[32m+[m[32m    password1 = forms.CharField(max_length=50,label='password',widget=forms.PasswordInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    password2 = forms.CharField(max_length=50,label='confirm password',widget=forms.PasswordInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m    contact = forms.CharField(max_length=11, required=False,widget=forms.NumberInput(attrs={'class': 'form-control'}))[m
[32m+[m[32m     #salary = forms.FloatField(max_value=200, required=False)[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m         model = get_user_model()[m
[32m+[m[32m         fields = ('email',  'password1', 'password2','contact')[m
[32m+[m[32m        #  model = User[m
[32m+[m[32m        #  fields =['username','email','first_name','last_name'][m
[32m+[m
[32m+[m[32mclass LoginForm(AuthenticationForm):[m
[32m+[m[32m    username= forms.CharField(label='email/username')[m
[32m+[m[41m    [m
[1mdiff --git a/emp/migrations/0001_initial.py b/emp/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..50ebf70[m
[1m--- /dev/null[m
[1m+++ b/emp/migrations/0001_initial.py[m
[36m@@ -0,0 +1,131 @@[m
[32m+[m[32m# Generated by Django 3.2 on 2022-04-15 05:04[m
[32m+[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mimport django.contrib.auth.models[m
[32m+[m[32mimport django.contrib.auth.validators[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mimport django.utils.timezone[m
[32m+[m[32mimport uuid[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('auth', '0012_alter_user_first_name_max_length'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='MyUser',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('password', models.CharField(max_length=128, verbose_name='password')),[m
[32m+[m[32m                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),[m
[32m+[m[32m                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),[m
[32m+[m[32m                ('contact', models.CharField(max_length=11, null=True)),[m
[32m+[m[32m                ('user_type', models.CharField(choices=[('SELLER', 'seller'), ('SUPERADMIN', 'super admin'), ('CUSTOMER', 'customer')], default=None, max_length=11, null=True)),[m
[32m+[m[32m                ('is_active', models.BooleanField(default=True)),[m
[32m+[m[32m                ('is_admin', models.BooleanField(default=False)),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'abstract': False,[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='get_user',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('email', models.EmailField(default=None, max_length=254)),[m
[32m+[m[32m                ('password1', models.CharField(max_length=50)),[m
[32m+[m[32m                ('password2', models.CharField(max_length=50)),[m
[32m+[m[32m                ('contact', models.CharField(max_length=12)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Product',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('product_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),[m
[32m+[m[32m                ('title', models.CharField(max_length=20)),[m
[32m+[m[32m                ('description', models.TextField()),[m
[32m+[m[32m                ('price', models.FloatField()),[m
[32m+[m[32m                ('discounted_price', models.FloatField()),[m
[32m+[m[32m                ('image_upload', models.ImageField(default=None, null=True, upload_to='')),[m
[32m+[m[32m                ('file', models.FileField(null=True, upload_to='')),[m
[32m+[m[32m                ('category', models.CharField(choices=[('mobile', 'mobile'), ('laptop', 'laptop')], default=None, max_length=6, null=True)),[m
[32m+[m[32m                ('user', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='employee',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('Firstname', models.CharField(max_length=50)),[m
[32m+[m[32m                ('Lastname', models.CharField(max_length=50)),[m
[32m+[m[32m                ('Email', models.EmailField(default=None, max_length=254)),[m
[32m+[m[32m                ('City', models.CharField(max_length=50)),[m
[32m+[m[32m                ('Salary', models.FloatField()),[m
[32m+[m[32m                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='CustomUser',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('password', models.CharField(max_length=128, verbose_name='password')),[m
[32m+[m[32m                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),[m
[32m+[m[32m                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),[m
[32m+[m[32m                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),[m
[32m+[m[32m                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),[m
[32m+[m[32m                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),[m
[32m+[m[32m                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),[m
[32m+[m[32m                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),[m
[32m+[m[32m                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),[m
[32m+[m[32m                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),[m
[32m+[m[32m                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),[m
[32m+[m[32m                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'verbose_name': 'user',[m
[32m+[m[32m                'verbose_name_plural': 'users',[m
[32m+[m[32m                'abstract': False,[m
[32m+[m[32m            },[m
[32m+[m[32m            managers=[[m
[32m+[m[32m                ('objects', django.contrib.auth.models.UserManager()),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='CartItem',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('quantity', models.IntegerField(default=1)),[m
[32m+[m[32m                ('price', models.IntegerField(default=1)),[m
[32m+[m[32m                ('address', models.CharField(blank=True, default='', max_length=50)),[m
[32m+[m[32m                ('phone', models.CharField(blank=True, default='', max_length=50)),[m
[32m+[m[32m                ('status', models.BooleanField(default=False)),[m
[32m+[m[32m                ('customer', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emp.product')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Cart',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('date', models.DateTimeField(auto_now_add=True)),[m
[32m+[m[32m                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Wishlist',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emp.product')),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'unique_together': {('customer', 'item')},[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/emp/migrations/0002_alter_product_user.py b/emp/migrations/0002_alter_product_user.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8bffbb3[m
[1m--- /dev/null[m
[1m+++ b/emp/migrations/0002_alter_product_user.py[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m# Generated by Django 3.2 on 2022-04-15 06:44[m
[32m+[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('emp', '0001_initial'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='product',[m
[32m+[m[32m            name='user',[m
[32m+[m[32m            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/emp/migrations/0003_alter_myuser_user_type.py b/emp/migrations/0003_alter_myuser_user_type.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2f861d8[m
[1m--- /dev/null[m
[1m+++ b/emp/migrations/0003_alter_myuser_user_type.py[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m# Generated by Django 3.2 on 2022-04-15 06:56[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('emp', '0002_alter_product_user'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='myuser',[m
[32m+[m[32m            name='user_type',[m
[32m+[m[32m            field=models.CharField(choices=[('SELLER', 'seller'), ('SUPERADMIN', 'super admin'), ('CUSTOMER', 'customer')], max_length=11, null=True),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/emp/migrations/0004_alter_product_product_id.py b/emp/migrations/0004_alter_product_product_id.py[m
[1mnew file mode 100644[m
[1mindex 0000000..591918e[m
[1m--- /dev/null[m
[1m+++ b/emp/migrations/0004_alter_product_product_id.py[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Generated by Django 3.2 on 2022-04-15 10:50[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport uuid[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('emp', '0003_alter_myuser_user_type'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='product',[m
[32m+[m[32m            name='product_id',[m
[32m+[m[32m            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/emp/migrations/__init__.py b/emp/migrations/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/emp/migrations/__pycache__/0001_initial.cpython-310.pyc b/emp/migrations/__pycache__/0001_initial.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..051e5ec[m
Binary files /dev/null and b/emp/migrations/__pycache__/0001_initial.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_alter_myuser_is_active.cpython-310.pyc b/emp/migrations/__pycache__/0002_alter_myuser_is_active.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..9a48a60[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_alter_myuser_is_active.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_alter_myuser_user_type.cpython-310.pyc b/emp/migrations/__pycache__/0002_alter_myuser_user_type.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..76fb409[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_alter_myuser_user_type.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_alter_product_category.cpython-310.pyc b/emp/migrations/__pycache__/0002_alter_product_category.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..40983ca[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_alter_product_category.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_alter_product_image_upload.cpython-310.pyc b/emp/migrations/__pycache__/0002_alter_product_image_upload.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2f300c8[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_alter_product_image_upload.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_alter_product_user.cpython-310.pyc b/emp/migrations/__pycache__/0002_alter_product_user.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..db4941b[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_alter_product_user.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_auto_20220317_1615.cpython-310.pyc b/emp/migrations/__pycache__/0002_auto_20220317_1615.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..00bf84b[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_auto_20220317_1615.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0002_rename_choice_field_myuser_user_type.cpython-310.pyc b/emp/migrations/__pycache__/0002_rename_choice_field_myuser_user_type.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7792898[m
Binary files /dev/null and b/emp/migrations/__pycache__/0002_rename_choice_field_myuser_user_type.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_alter_myuser_email.cpython-310.pyc b/emp/migrations/__pycache__/0003_alter_myuser_email.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..577d674[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_alter_myuser_email.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_alter_myuser_user_type.cpython-310.pyc b/emp/migrations/__pycache__/0003_alter_myuser_user_type.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7438aa5[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_alter_myuser_user_type.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_alter_product_user.cpython-310.pyc b/emp/migrations/__pycache__/0003_alter_product_user.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..f9f61b7[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_alter_product_user.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_cart_cartitem.cpython-310.pyc b/emp/migrations/__pycache__/0003_cart_cartitem.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..3649b33[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_cart_cartitem.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_product.cpython-310.pyc b/emp/migrations/__pycache__/0003_product.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e3624fe[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_product.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_product_file.cpython-310.pyc b/emp/migrations/__pycache__/0003_product_file.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..414111b[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_product_file.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0003_product_image_upload.cpython-310.pyc b/emp/migrations/__pycache__/0003_product_image_upload.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d87ffbf[m
Binary files /dev/null and b/emp/migrations/__pycache__/0003_product_image_upload.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0004_alter_myuser_email.cpython-310.pyc b/emp/migrations/__pycache__/0004_alter_myuser_email.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..bf2d477[m
Binary files /dev/null and b/emp/migrations/__pycache__/0004_alter_myuser_email.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0004_alter_product_image_upload.cpython-310.pyc b/emp/migrations/__pycache__/0004_alter_product_image_upload.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2a99b6c[m
Binary files /dev/null and b/emp/migrations/__pycache__/0004_alter_product_image_upload.cpython-310.pyc differ
[1mdiff --git a/emp/migrations/__pycache__/0004_alter_product_product_id.cpython-310.pyc b/emp/migrations/__pycache__/0004_alter_product_product_id.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..6ed8483[m